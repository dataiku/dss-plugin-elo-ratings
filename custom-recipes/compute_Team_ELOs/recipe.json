// This file is the descriptor for the Custom code recipe compute_Team_ELOs
{
    // Meta data for display purposes
    "meta" : {
        "label" : "Plugin for Elo Ratings",
        "description" : "Plugin to calculate Elo ratings for teams/players based on a history of match/game results.",
        "icon" : "icon-bar-chart"
    },

    "kind" : "PYTHON",
    

    // Inputs and outputs are defined by roles. In the recipe's I/O tab, the user can associate one
    // or more dataset to each input and output role.

    // The "arity" field indicates whether the user can associate several datasets to the role ('NARY')
    // or at most one ('UNARY'). The "required" field indicates whether the user is allowed to
    // associate no dataset with the role.

    "inputRoles" : [
        {
            "name": "input_dataset",
            "label": "Input dataset",
            "description": "Dataset containing match/game history with at least match datetime, teamIds and team score columns.",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],

    "outputRoles" : [
        {
            "name": "output_dataset",
            "label": "Output dataset",
            "description": "Dataset containing input dataset joined to columns containing Elo rankings before and after the match.",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],

    // The field "params" holds a list of all the params
    // for wich the user will be prompted for values in the Settings tab of the recipe.

    // The available parameter types are:
    // STRING, INT, DOUBLE, BOOLEAN, PASSWORD, SELECT, MAP, COLUMN, COLUMNS, TEXTAREA

   "params": [

        // A 'COLUMN' parameter is a string, whose value is a column name from an input schema.
        // To specify the input schema whose column names are used, use the "columnRole" field like below.
        // The column names will come from the schema of the first dataset associated to that role.
        
        {
            "name": "matchId",
            "label" : "MatchId column",
            "type": "COLUMN",
            "description": "Select the match ID column",
            "mandatory" : true,
            "columnRole":"input_dataset"
        },
        {
            "name": "match_datetime",
            "label" : "Match datetime column",
            "type": "COLUMN",
            "description": "Select the match datetime column",
            "mandatory" : true,
            "columnRole":"input_dataset"
        },
        {
            "name": "homeTeamId",
            "label" : "Player 1 ID column",
            "type": "COLUMN",
            "description": "Select the player 1 ID column",
            "mandatory" : true,
            "columnRole":"input_dataset"
        },
        {
            "name": "awayTeamId",
            "label" : "Player 2 ID column",
            "type": "COLUMN",
            "description": "Select the player 2 ID column",
            "mandatory" : true,
            "columnRole":"input_dataset"
        },
        {
            "name": "homeTeam_goals",
            "label" : "Player 1 score column",
            "type": "COLUMN",
            "description": "Select the player 1 score column. If W/D/L this column should contain 1/0.5/0.",
            "mandatory" : true,
            "columnRole":"input_dataset"
        },
        {
            "name": "awayTeam_goals",
            "label" : "Player 2 score column",
            "type": "COLUMN",
            "description": "Select the player 2 score column. If W/D/L this column should contain 1/0.5/0.",
            "mandatory" : true,
            "columnRole":"input_dataset"
        },
        {
            "name": "match_level",
            "label" : "Match importance level",
            "type": "COLUMN",
            "description": "Select the match importance level column (OPTIONAL)",
            "mandatory" : false,
            "columnRole":"input_dataset"
        }
        

        // The 'COLUMNS' type works in the same way, except that it is a list of strings.
    ],

    // The field "resourceKeys" holds a list of keys that allows to limit the number
    // of concurrent executions and activities triggered by this recipe.
    //
    // Administrators can configure the limit per resource key in the Administration > Settings > Flow build
    // screen.

    "resourceKeys" : []

}
